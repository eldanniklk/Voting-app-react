{"map":"{\"version\":3,\"sources\":[\"/home/eldanniklk/voting-dapp/src/App.js\",\"/home/eldanniklk/voting-dapp/src/index.js\"],\"names\":[\"App\",\"elections\",\"setElections\",\"useState\",\"account\",\"setAccount\",\"votingContract\",\"setVotingContract\",\"useEffect\",\"loadBlockchainData\",\"React\",\"createElement\",\"className\",\"ReactDOM\",\"render\",\"StrictMode\",\"document\",\"getElementById\"],\"mappings\":\"sdA2DeA,IAAAA,EAvDf,WACE,MAAOC,EAAWC,GAAgBC,OAAAA,EAAAA,SAAAA,CAAS,KACpCC,EAASC,GAAcF,OAAAA,EAAAA,SAAAA,CAAS,KAChCG,EAAgBC,GAAqBJ,OAAAA,EAAAA,SAAAA,CAAS,MAKrD,OAHAK,OAAAA,EAAAA,UAAAA,CAAU,KACRC,sBACC,IAEDC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbF,EAAAA,EAAAC,cAAA,KAAA,KAAI,iBCTVE,EAAAA,EAASC,OACPJ,EAAAA,EAAAC,cAACD,EAAAA,EAAMK,WAAU,KACfL,EAAAA,EAAAC,cAACX,EAAG,OAENgB,SAASC,eAAe\",\"sourcesContent\":[\"import React, { useState, useEffect } from \\\"react\\\";\\nimport { ethers } from \\\"ethers\\\";\\nimport VotingContract from \\\"./Voting.json\\\";\\n\\nfunction App() {\\n  const [elections, setElections] = useState([]);\\n  const [account, setAccount] = useState(\\\"\\\");\\n  const [votingContract, setVotingContract] = useState(null);\\n\\n  useEffect(() => {\\n    loadBlockchainData();\\n  }, []);\\n  return (\\n    <div className=\\\"App\\\">\\n      <h1>Voting DApp</h1>\\n    </div>\\n  );\\n  const loadBlockchainData = async () => {\\n    if (window.ethereum) {\\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\\n      const signer = provider.getSigner();\\n      const contractAddress = \\\"0xYourContractAddress\\\"; // Dirección del contrato desplegado\\n      const contract = new ethers.Contract(contractAddress, VotingContract.abi, signer);\\n\\n      setVotingContract(contract);\\n\\n      const accounts = await window.ethereum.request({ method: \\\"eth_requestAccounts\\\" });\\n      setAccount(accounts[0]);\\n\\n      const electionsCount = await contract.electionsCount();\\n      let electionsArray = [];\\n      for (let i = 1; i <= electionsCount; i++) {\\n        const election = await contract.elections(i);\\n        electionsArray.push(election);\\n      }\\n      setElections(electionsArray);\\n    }\\n  };\\n\\n  const createElection = async (name) => {\\n    await votingContract.createElection(name);\\n  };\\n\\n  return (\\n    <div>\\n      <h1>Voting DApp</h1>\\n      <p>Account: {account}</p>\\n      <h2>Create New Election</h2>\\n      <button onClick={() => createElection(\\\"My Election\\\")}>Create Election</button>\\n      <h2>Existing Elections</h2>\\n      {elections.map((election, index) => (\\n        <div key={index}>\\n          <p>Election Name: {election.name}</p>\\n        </div>\\n      ))}\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';  // Asegúrate de que este archivo existe o elimina esta línea si no lo necesitas\\nimport App from './App';  // Esta importación debe apuntar al archivo `App.js` en `src`\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{63:function(t){t.exports={abi:[{inputs:[],name:\"createElection\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_electionId\",type:\"uint256\"}],name:\"vote\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}]}},66:function(t,e,n){t.exports=n(76)},74:function(t,e,n){},76:function(t,e,n){\"use strict\";n.r(e);var a=n(3),u=n.n(a),c=n(62),o=n.n(c);n(74),n(43),n(63);var i=function(){const[t,e]=Object(a.useState)([]),[n,c]=Object(a.useState)(\"\"),[o,i]=Object(a.useState)(null);return Object(a.useEffect)(()=>{loadBlockchainData()},[]),u.a.createElement(\"div\",{className:\"App\"},u.a.createElement(\"h1\",null,\"Voting DApp\"))};o.a.render(u.a.createElement(u.a.StrictMode,null,u.a.createElement(i,null)),document.getElementById(\"root\"))}},[[66,1,2]]]);","extractedComments":[]}